#!/bin/sh

# pvagrant
# Quick hack: execute Vagrant commands in parallel even if Vagrant claims the
# provider doesn't support it (VirtualBox).


function _get_vagrant_vms() {
    local filter=$1

    for vm in `vagrant status --machine-readable | cut -d ',' -f 2 | sort | uniq`; do
        if [ -z "$filter" ]; then
            echo $vm
        elif [ -z "${vm##*$filter*}" ]; then
            echo $vm
        fi
    done
}


function _exec_vagrant_cmd() {
    for vm in "${@:2}"; do
        echo "--> Execute: ${1} ${vm}"
        $1 $vm &
    done

    wait

    echo "<-- All vagrant commands completed"
    return 0
}


function _print_help() {
    echo "Usage:"
    echo "pvagrant [up|destroy]"
    echo "pvagrant [up|destroy] vm*"
    echo "pvagrant [up|destroy] vm1 vm2..."
}


pvagrant() {
    local cmd=""

    case "$1" in
        "--help")
            _print_help
            return 0
            ;;
        "up")
            cmd="vagrant up"
            ;;
        "destroy")
            cmd="vagrant destroy -f"
            ;;
        *)
            _print_help
            return 1
    esac

    local vms=${@:2}

    if [ -z "$vms" ]; then
        echo "--> No VMs provided, listing from vagrant..."
        vms=`_get_vagrant_vms`

    elif [ -z "${vms##*\**}" ]; then
        echo "--> Listing vagrant VMs matching: $vms"
        vms=`_get_vagrant_vms $vms`
    fi

    _exec_vagrant_cmd "$cmd" $vms
}
